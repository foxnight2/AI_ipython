
model {
    module {
        type: "Resnet18"
        resnet18_param {
            pretrained: True
            num_classes: 10
        }
        bottom: "data"
        top: "pred"
    }
    
    module {
        type: "CrossEntropyLoss"
        bottom: "pred"
        bottom: "label"
        top: "loss"
        
        phase: TRAIN
    }
    
    input_names: ["data", "label"]
    output_names: ["pred", "loss"]
}




dataset {
    name: "test_dataset"
    type: "CIFAR10"
    top: "data"
    top: "label"
    cifar10_param {
        root: "./"
        train: false
        download: true  
        transform: "train_transforms"
    }
}

dataloader {
    name: "test_dataloader"
    batch_size: 128
    num_workers: 1
    shuffle: false
    dataset: "test_dataset"
    phase: EVAL
}



transforms {
    name: "train_transforms"
    op {
        type: "ToTensor"
    }
}

dataset {
    name: "train_dataset"
    type: "CIFAR10"
    top: "data"
    top: "label"
    cifar10_param {
        root: "./"
        train: true
        download: true  
        transform: "train_transforms"
    }
}



dataloader {
    name: "train_dataloader"
    batch_size: 128
    num_workers: 2
    shuffle: true
    dataset: "train_dataset"
    phase: TRAIN
}


optimizer {
    name: "optimizer"
    
    type: "SGD"
    lr: 0.01
    momentum: 0.9
    
    params_group {
        # lr: 0.01
        # momentum: 0.2
        params_inline: "params_1 = [p for n, p in model.named_parameters() if 'weight' in n]"
    }
    params_group {
        # lr: 0.1
        params_inline: "params_2 = [p for n, p in model.named_parameters() if not 'weight' in n]"
    }
        
}

lr_scheduler {
    name: "lr_scheduler_1"
    type: "MultiStepLR"
    gamma: 0.1
    milestones: [10, 15]    
    # module_inline: "lr_scheduler_1 = torch.optim.lr_scheduler.MultiStepLR(optimizer, milestones=[1, 2], gamma=0.1)"
}


device: "cuda:0"
use_amp: False

distributed {
    enabled: True
    backend: "nccl"
    init_method: "env://"
}

epoches: 20

snapshot: 10
log_dir: "./logs"
prefix: "pp_model"

